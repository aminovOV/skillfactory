import telebot
from telebot import types
from weather import Weather, WeatherByGeolocation
from settings import BOT_API_KEY
from converter import converter, keyboard
from misc import joke


bot = telebot.TeleBot(BOT_API_KEY)


@bot.message_handler(commands=['start', 'help'])
def start(message):
    main_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
    btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞')
    main_keyboard.add(btn1, btn2)
    bot.send_message(message.from_user.id, f"üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ú–∞—Ä–≤–∏–Ω, —Ä–æ–±–æ—Ç - –ø–æ–º–æ—â–Ω–∏–∫.\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç, "
                                           f"–Ω–∞–∂–º–∏—Ç–µ /converter\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É, –Ω–∞–∂–º–∏—Ç–µ /weather\n\n"
                                           f"–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤–Ω–∏–∑—É ‚¨áÔ∏è", reply_markup=main_keyboard)


@bot.message_handler(commands=['converter'])
def convert(message):
    bot.send_message(message.from_user.id, "–í –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–æ–¥–∏–º?\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ ‚¨áÔ∏è\n "
                                           "–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã\n–ü—Ä–∏–º–µ—Ä: RUB", reply_markup=keyboard())
    bot.register_next_step_handler(message, convert_step_1)
    print(message.text)


def convert_step_1(message):
    bot.send_message(message.from_user.id, "–ò–∑ –∫–∞–∫–æ–π –≤–∞–ª—é—Ç—ã –ø–µ—Ä–µ–≤–æ–¥–∏–º?\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ ‚¨áÔ∏è\n "
                                           "–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã\n–ü—Ä–∏–º–µ—Ä: USD")
    converter.reset()
    converter.add_value('quote', message.text)
    print(converter.values())
    bot.register_next_step_handler(message, convert_step_2)


def convert_step_2(message):
    bot.send_message(message.from_user.id, "–°–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º?")
    converter.add_value('base', message.text)
    print(converter.values())
    bot.register_next_step_handler(message, convert_step_3)


def convert_step_3(message):
    converter.add_value('amount', message.text)
    if message.text == '/start' or message.text == '/help':
        start(message)
    elif message.text == '/weather' or message.text == '–ü–æ–≥–æ–¥–∞':
        get_location(message)
    elif message.text == '/converter' or message.text == '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
        convert(message)
    elif message.content_type == 'location':
        geo(message)
    elif message.content_type != 'text':
        get_location(message)
    else:
        bot.send_message(message.from_user.id, converter.get_price(converter.values()))


@bot.message_handler(commands=['weather'])
def get_location(message):
    bot.send_message(message.from_user.id, '‚ùì–î–ª—è –∫–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —Å–º–æ—Ç—Ä–∏–º –ø–æ–≥–æ–¥—É‚ùì\n\n–ù–∞–∂–º–∏—Ç–µ –∑–Ω–∞—á–æ–∫ üìé –∏ –≤—ã–±–µ—Ä–∏—Ç–µ '
                                           '"–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è"\n\n–õ–∏–±–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞)')
    bot.register_next_step_handler(message, weather)


def weather(message):
    if message.text == '/start' or message.text == '/help':
        start(message)
    elif message.text == '/weather' or message.text == '–ü–æ–≥–æ–¥–∞':
        get_location(message)
    elif message.text == '/converter' or message.text == '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
        convert(message)
    elif message.content_type == 'location':
        geo(message)
    elif message.content_type != 'text':
        get_location(message)
    else:
        city = Weather(message.text)
        try:
            bot.send_message(message.from_user.id, joke(), parse_mode='Markdown')
            bot.send_message(message.from_user.id, city.get_weather(), parse_mode='Markdown')
        except Exception:
            bot.send_message(message.from_user.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == '–ü–æ–≥–æ–¥–∞':
        bot.send_message(message.from_user.id, '‚ùì–î–ª—è –∫–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —Å–º–æ—Ç—Ä–∏–º –ø–æ–≥–æ–¥—É‚ùì\n\n–ù–∞–∂–º–∏—Ç–µ –∑–Ω–∞—á–æ–∫ üìé –∏ –≤—ã–±–µ—Ä–∏—Ç–µ '
                                               '"–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è"\n\n–õ–∏–±–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞)')
        bot.register_next_step_handler(message, weather)

    elif message.text == '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
        bot.send_message(message.from_user.id, joke(), parse_mode='Markdown')
        convert(message)


@bot.message_handler(content_types=['location'])
def geo(message: telebot.types.Message):
    city = WeatherByGeolocation(message.location.latitude, message.location.longitude)
    try:
        bot.send_message(message.from_user.id, f'{city.get_weather()}', parse_mode='Markdown')
    except Exception:
        bot.send_message(message.from_user.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')


@bot.message_handler(content_types=['voice'])
def voice(message: telebot.types.Message):
    bot.send_message(message.from_user.id,
                     '–ü–æ–∫–∞ —è –Ω–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≥–æ–ª–æ—Å–æ–º.\n–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —á—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ —è –º–æ–≥—É –¥–µ–ª–∞—Ç—å —Å –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ '
                     '—Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.\n–ú–æ–∂–µ—Ç –±—ã—Ç—å, –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å –≥–æ–ª–æ—Å –≤ —Ç–µ–∫—Å—Ç.\n–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.')


@bot.message_handler(content_types=['video'])
def video(message: telebot.types.Message):
    bot.send_message(message.from_user.id,
                     '–ü–æ–∫–∞ —è –Ω–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≤–∏–¥–µ–æ.\n–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —á—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ —è –º–æ–≥—É –¥–µ–ª–∞—Ç—å —Å –≤–∏–¥–µ–æ.\n '
                     '–ù–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–∏–º–∏—Ç—å –Ω–∞ —é—Ç—É–± –∫–∞–Ω–∞–ª –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤ –æ–±–ª–∞–∫–æ.\n–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.')


@bot.message_handler(content_types=['audio'])
def audio(message: telebot.types.Message):
    bot.send_message(message.from_user.id,
                     '–ü–æ–∫–∞ —è –Ω–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º—É–∑—ã–∫–æ–π.\n–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —á—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ —è –º–æ–≥—É –¥–µ–ª–∞—Ç—å —Å –º—É–∑—ã–∫–æ–π.\n'
                     '–ú–æ–∂–µ—Ç –±—ã—Ç—å, –∏—Å–∫–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –∏–º–µ–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è, –∏–ª–∏ –∏—Å–∫–∞—Ç—å –≤ —Å–µ—Ç–∏ '
                     '—Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏.\n–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.')


@bot.message_handler(content_types=['document'])
def document(message: telebot.types.Message):
    bot.send_message(message.from_user.id,
                     '–ü–æ–∫–∞ —è –Ω–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.\n–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —á—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ —è –º–æ–≥—É –¥–µ–ª–∞—Ç—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.'
                     '\n–ú–æ–∂–µ—Ç –±—ã—Ç—å, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å —Ñ–∞–π–ª—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤ doc –∏ xlsx –≤ pdf, —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Å–∫–∞–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.\n'
                     '–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.')


@bot.message_handler(content_types=['sticker'])
def send_sticker(message: telebot.types.Message):
    bot.send_message(message.from_user.id, '–£ –º–µ–Ω—è –∫–æ–Ω—á–∏–ª–∏—Å—å —Å—Ç–∏–∫–µ—Ä—ã. –õ–æ–≤–∏—Ç–µ —Å–º–∞–π–ª–∏–∫ )')


@bot.message_handler(content_types=['photo'])
def photo(message: telebot.types.Message):
    bot.send_message(message.from_user.id,
                     '–ü–æ–∫–∞ —è –Ω–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–æ—Ç–æ.\n–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —á—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ —è –º–æ–≥—É –¥–µ–ª–∞—Ç—å —Å —Ñ–æ—Ç–æ.\n'
                     '–ú–æ–∂–µ—Ç –±—ã—Ç—å, –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ª—É—á—à–∏—Ö –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ –ø—Ä—è–º–æ '
                     '—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –∏—Å–∫–∞—Ç—å –ø–æ —Ñ–æ—Ç–æ –≤ —Å–µ—Ç–∏.\n–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.')


@bot.message_handler(content_types=['video_note'])
def video_note(message: telebot.types.Message):
    bot.send_message(message.from_user.id,
                     '–ü–æ–∫–∞ —è –Ω–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.\n–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —á—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ —è –º–æ–≥—É –¥–µ–ª–∞—Ç—å —Å —ç—Ç–∏–º.\n'
                     '–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.')


bot.polling(none_stop=True, interval=0)
